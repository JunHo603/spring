{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Github\\\\spring\\\\lms_app\\\\src\\\\Components\\\\LMS\\\\Course\\\\Course.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { getContentsByLectureId } from \"../../../Api/LeaningApi/LeaningApi\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Course() {\n  _s();\n  const {\n    userId,\n    lectureId\n  } = useParams();\n  const [learning, setlearing] = useState([]);\n  useEffect(() => {\n    learningContents();\n    console.log(learning);\n  }, []);\n  async function learningContents() {\n    const learningAxiox = await getContentsByLectureId(lectureId);\n    console.log(learningAxiox);\n    setlearing(learningAxiox);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u3000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"*Content Data*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), learning.map((data, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [index, \".\", data.learningContents]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(Course, \"uW0kduOSJbKna9/QMDNbYjm11Jw=\", false, function () {\n  return [useParams];\n});\n_c = Course;\nvar _c;\n$RefreshReg$(_c, \"Course\");","map":{"version":3,"names":["useParams","getContentsByLectureId","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Course","_s","userId","lectureId","learning","setlearing","learningContents","console","log","learningAxiox","children","fileName","_jsxFileName","lineNumber","columnNumber","map","data","index","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/Github/spring/lms_app/src/Components/LMS/Course/Course.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { getContentsByLectureId } from \"../../../Api/LeaningApi/LeaningApi\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport function Course() {\r\n  const { userId, lectureId } = useParams();\r\n  const [learning, setlearing] = useState([]);\r\n\r\n  useEffect(() => {\r\n    learningContents();\r\n    console.log(learning);\r\n  }, []);\r\n\r\n  async function learningContents() {\r\n    const learningAxiox = await getContentsByLectureId(lectureId);\r\n    console.log(learningAxiox);\r\n    setlearing(learningAxiox);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>ã€€</p>\r\n      <p>*Content Data*</p>\r\n      {learning.map((data, index) => (\r\n        <p key={index}>\r\n          {index}.{data.learningContents}\r\n        </p>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,sBAAsB,QAAQ,oCAAoC;AAC3E,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,OAAO,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGX,SAAS,CAAC,CAAC;EACzC,MAAM,CAACY,QAAQ,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACdY,gBAAgB,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeE,gBAAgBA,CAAA,EAAG;IAChC,MAAMG,aAAa,GAAG,MAAMhB,sBAAsB,CAACU,SAAS,CAAC;IAC7DI,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;IAC1BJ,UAAU,CAACI,aAAa,CAAC;EAC3B;EAEA,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAG;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACRjB,OAAA;MAAAa,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACpBV,QAAQ,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBpB,OAAA;MAAAa,QAAA,GACGO,KAAK,EAAC,GAAC,EAACD,IAAI,CAACV,gBAAgB;IAAA,GADxBW,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACJ,CAAC;EAAA,eACF,CAAC;AAEP;AAACb,EAAA,CA1BeD,MAAM;EAAA,QACUR,SAAS;AAAA;AAAA0B,EAAA,GADzBlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}