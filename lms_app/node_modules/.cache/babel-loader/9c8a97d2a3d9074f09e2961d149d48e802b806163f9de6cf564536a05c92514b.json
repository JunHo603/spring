{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Github\\\\lms_app\\\\src\\\\Components\\\\LMS\\\\Lecture\\\\LectureDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getLecture } from \"../../../Api/LectureApi/LectureApi\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 20% 80%;\n`;\n_c = Container;\nconst SideMenu = styled.div`\n  width: 100%;\n  border: 1px solid black;\n`;\n_c2 = SideMenu;\nconst Content = styled.div`\n  width: 100%;\n  border: 1px solid yellow;\n`;\n_c3 = Content;\nconst LectureImg = styled.img`\n  width: 50%;\n`;\nexport function LectureDetail() {\n  _s();\n  const {\n    lectureId\n  } = useParams();\n  const [lecture, setLecture] = useState(null);\n  useEffect(() => {\n    async function fetchLecture() {\n      try {\n        const data = await getLecture(lectureId); // getLecture API 호출\n        setLecture(data); // 가져온 데이터를 상태로 저장\n      } catch (error) {\n        console.log(\"Error\", error); // 오류가 발생하면 오류 상태로 설정\n      }\n    }\n    fetchLecture(); // 컴포넌트가 마운트될 때 API 호출\n  }, [lectureId]); // lectureId가 변경될 때마다 다시 호출\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lecture ID: \", lectureId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lecture Title: \", lecture.lectureName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lecture Description: \", lecture.learningObject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(LectureDetail, \"Tnuf22xgKMiYN0yY4sTau3JBODs=\", false, function () {\n  return [useParams];\n});\n_c4 = LectureDetail;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SideMenu\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"LectureDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getLecture","styled","jsxDEV","_jsxDEV","Container","div","_c","SideMenu","_c2","Content","_c3","LectureImg","img","LectureDetail","_s","lectureId","lecture","setLecture","fetchLecture","data","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","lectureName","learningObject","_c4","$RefreshReg$"],"sources":["C:/Users/admin/Documents/Github/lms_app/src/Components/LMS/Lecture/LectureDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getLecture } from \"../../../Api/LectureApi/LectureApi\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 20% 80%;\r\n`;\r\n\r\nconst SideMenu = styled.div`\r\n  width: 100%;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  border: 1px solid yellow;\r\n`;\r\n\r\nconst LectureImg = styled.img`\r\n  width: 50%;\r\n`;\r\n\r\nexport function LectureDetail() {\r\n  const { lectureId } = useParams();\r\n  const [lecture, setLecture] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchLecture() {\r\n      try {\r\n        const data = await getLecture(lectureId); // getLecture API 호출\r\n        setLecture(data); // 가져온 데이터를 상태로 저장\r\n      } catch (error) {\r\n        console.log(\"Error\", error); // 오류가 발생하면 오류 상태로 설정\r\n      }\r\n    }\r\n    fetchLecture(); // 컴포넌트가 마운트될 때 API 호출\r\n  }, [lectureId]); // lectureId가 변경될 때마다 다시 호출\r\n\r\n  return (\r\n    <Container>\r\n      <SideMenu></SideMenu>\r\n      <Content>\r\n        {/* <LectureImg src={lecture.imagePath}></LectureImg> */}\r\n        <p>Lecture ID: {lectureId}</p>\r\n        <p>Lecture Title: {lecture.lectureName}</p>\r\n        <p>Lecture Description: {lecture.learningObject}</p>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,QAAQ,oCAAoC;AAC/D,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAG;AAC5B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,SAAS;AAMf,MAAMG,QAAQ,GAAGN,MAAM,CAACI,GAAG;AAC3B;AACA;AACA,CAAC;AAACG,GAAA,GAHID,QAAQ;AAKd,MAAME,OAAO,GAAGR,MAAM,CAACI,GAAG;AAC1B;AACA;AACA,CAAC;AAACK,GAAA,GAHID,OAAO;AAKb,MAAME,UAAU,GAAGV,MAAM,CAACW,GAAG;AAC7B;AACA,CAAC;AAED,OAAO,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAU,CAAC,GAAGhB,SAAS,CAAC,CAAC;EACjC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,eAAeoB,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMnB,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC;QAC1CE,UAAU,CAACE,IAAI,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC,CAAC;MAC/B;IACF;IACAF,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,oBACEZ,OAAA,CAACC,SAAS;IAAAmB,QAAA,gBACRpB,OAAA,CAACI,QAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACrBxB,OAAA,CAACM,OAAO;MAAAc,QAAA,gBAENpB,OAAA;QAAAoB,QAAA,GAAG,cAAY,EAACR,SAAS;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BxB,OAAA;QAAAoB,QAAA,GAAG,iBAAe,EAACP,OAAO,CAACY,WAAW;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3CxB,OAAA;QAAAoB,QAAA,GAAG,uBAAqB,EAACP,OAAO,CAACa,cAAc;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEhB;AAACb,EAAA,CA3BeD,aAAa;EAAA,QACLd,SAAS;AAAA;AAAA+B,GAAA,GADjBjB,aAAa;AAAA,IAAAP,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}