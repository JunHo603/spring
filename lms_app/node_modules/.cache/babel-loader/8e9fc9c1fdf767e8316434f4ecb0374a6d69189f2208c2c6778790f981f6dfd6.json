{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Github\\\\spring\\\\lms_app\\\\src\\\\Components\\\\LMS\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../../Styles/login.css\";\nimport styled from \"styled-components\";\n// import { AuthProvider } from '../AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContainer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 70% 30%;\n`;\n_c = LoginContainer;\nconst shrinkAnimation = keyframes`\n  0% {\n    transform: scale(1); /* 원래 크기 */\n  }\n  100% {\n    transform: scale(0); /* 축소 후 크기 */\n  }\n`;\n\n// styled component 정의\nconst LoginImg = styled.img`\n  width: 100%;\n  height: 100vh;\n  animation: ${shrinkAnimation} 3s forwards; /* 애니메이션 적용 */\n`;\n_c2 = LoginImg;\nconst LoginForm = styled.div`\n  width: 100%;\n`;\n_c3 = LoginForm;\nexport function Login({\n  onSignup\n}) {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = async () => {\n    try {\n      const data = {\n        userId,\n        password\n      };\n      const response = await axios.post(\"http://localhost:8080/user/login\", data, {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        // console.log(\"response.status: \" + response.status); 200\n        // console.log(\"response.data: \" + response.data); Success\n\n        // AuthProvider.setIsAuthenticated(true);\n\n        window.location.href = \"home\";\n      }\n    } catch (error) {\n      alert(\"탈퇴 회원이거나, 잘못된 로그인 정보입니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginContainer, {\n    children: [/*#__PURE__*/_jsxDEV(LoginImg, {\n      src: \"./image/LoginBG.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this)\n\n  // <div className=\"login-box\">\n  //   <h2>로그인</h2>\n  //   <div className=\"input-box\">\n  //     <input\n  //       type=\"text\"\n  //       value={userId}\n  //       onChange={(e) => setUserId(e.target.value)}\n  //       placeholder=\"아이디\"\n  //     />\n  //     {/* <label>아이디</label> */}\n  //   </div>\n  //   <div className=\"input-box\">\n  //     <input\n  //       type=\"password\"\n  //       value={password}\n  //       onChange={(e) => setPassword(e.target.value)}\n  //       placeholder=\"비밀번호\"\n  //     />\n  //     {/* <label>비밀번호</label> */}\n  //   </div>\n  //   <div className=\"button-box\">\n  //     <div className=\"loginBtn\" onClick={handleLogin}>\n  //       로그인\n  //     </div>\n  //     <div className=\"signupBtn\" onClick={onSignup}>\n  //       회원가입\n  //     </div>\n  //   </div>\n  // </div>\n  ;\n}\n_s(Login, \"XWL4eILa5dp0qWHgM3/h8ZNsoT8=\");\n_c4 = Login;\nexport default Login;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LoginContainer\");\n$RefreshReg$(_c2, \"LoginImg\");\n$RefreshReg$(_c3, \"LoginForm\");\n$RefreshReg$(_c4, \"Login\");","map":{"version":3,"names":["React","useState","axios","styled","jsxDEV","_jsxDEV","LoginContainer","div","_c","shrinkAnimation","keyframes","LoginImg","img","_c2","LoginForm","_c3","Login","onSignup","_s","userId","setUserId","password","setPassword","handleLogin","data","response","post","withCredentials","status","window","location","href","error","alert","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["C:/Users/admin/Documents/Github/spring/lms_app/src/Components/LMS/Login/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../../Styles/login.css\";\r\nimport styled from \"styled-components\";\r\n// import { AuthProvider } from '../AuthContext';\r\n\r\nconst LoginContainer = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 70% 30%;\r\n`;\r\n\r\nconst shrinkAnimation = keyframes`\r\n  0% {\r\n    transform: scale(1); /* 원래 크기 */\r\n  }\r\n  100% {\r\n    transform: scale(0); /* 축소 후 크기 */\r\n  }\r\n`;\r\n\r\n// styled component 정의\r\nconst LoginImg = styled.img`\r\n  width: 100%;\r\n  height: 100vh;\r\n  animation: ${shrinkAnimation} 3s forwards; /* 애니메이션 적용 */\r\n`;\r\nconst LoginForm = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport function Login({ onSignup }) {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const data = { userId, password };\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/user/login\",\r\n        data,\r\n        { withCredentials: true }\r\n      );\r\n      if (response.status === 200) {\r\n        // console.log(\"response.status: \" + response.status); 200\r\n        // console.log(\"response.data: \" + response.data); Success\r\n\r\n        // AuthProvider.setIsAuthenticated(true);\r\n\r\n        window.location.href = \"home\";\r\n      }\r\n    } catch (error) {\r\n      alert(\"탈퇴 회원이거나, 잘못된 로그인 정보입니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <LoginImg src=\"./image/LoginBG.png\"></LoginImg>\r\n      <LoginForm></LoginForm>\r\n    </LoginContainer>\r\n\r\n    // <div className=\"login-box\">\r\n    //   <h2>로그인</h2>\r\n    //   <div className=\"input-box\">\r\n    //     <input\r\n    //       type=\"text\"\r\n    //       value={userId}\r\n    //       onChange={(e) => setUserId(e.target.value)}\r\n    //       placeholder=\"아이디\"\r\n    //     />\r\n    //     {/* <label>아이디</label> */}\r\n    //   </div>\r\n    //   <div className=\"input-box\">\r\n    //     <input\r\n    //       type=\"password\"\r\n    //       value={password}\r\n    //       onChange={(e) => setPassword(e.target.value)}\r\n    //       placeholder=\"비밀번호\"\r\n    //     />\r\n    //     {/* <label>비밀번호</label> */}\r\n    //   </div>\r\n    //   <div className=\"button-box\">\r\n    //     <div className=\"loginBtn\" onClick={handleLogin}>\r\n    //       로그인\r\n    //     </div>\r\n    //     <div className=\"signupBtn\" onClick={onSignup}>\r\n    //       회원가입\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B;AAClC,OAAOC,MAAM,MAAM,mBAAmB;AACtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAG;AACjC;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,cAAc;AAMpB,MAAMG,eAAe,GAAGC,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAGR,MAAM,CAACS,GAAG;AAC3B;AACA;AACA,eAAeH,eAAe;AAC9B,CAAC;AAACI,GAAA,GAJIF,QAAQ;AAKd,MAAMG,SAAS,GAAGX,MAAM,CAACI,GAAG;AAC5B;AACA,CAAC;AAACQ,GAAA,GAFID,SAAS;AAIf,OAAO,SAASE,KAAKA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMsB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,IAAI,GAAG;QAAEL,MAAM;QAAEE;MAAS,CAAC;MACjC,MAAMI,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAC/B,kCAAkC,EAClCF,IAAI,EACJ;QAAEG,eAAe,EAAE;MAAK,CAC1B,CAAC;MACD,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3B;QACA;;QAEA;;QAEAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,MAAM;MAC/B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,oBACE5B,OAAA,CAACC,cAAc;IAAA4B,QAAA,gBACb7B,OAAA,CAACM,QAAQ;MAACwB,GAAG,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC/ClC,OAAA,CAACS,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT;;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACrB,EAAA,CA7DeF,KAAK;AAAAwB,GAAA,GAALxB,KAAK;AA+DrB,eAAeA,KAAK;AAAC,IAAAR,EAAA,EAAAK,GAAA,EAAAE,GAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAAjC,EAAA;AAAAiC,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}