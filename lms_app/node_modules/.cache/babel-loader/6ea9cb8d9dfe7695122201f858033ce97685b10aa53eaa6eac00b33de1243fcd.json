{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Github\\\\spring\\\\lms_app\\\\src\\\\Components\\\\LMS\\\\Login\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background-color: #0f1015;\n  width: 100%;\n  height: 100%;\n`;\n_c = Container;\nconst SignUp = ({\n  onSuccess\n}) => {\n  _s();\n  const [signupUserId, setSignupUserId] = useState(\"\");\n  const [signupPassword, setSignupPassword] = useState(\"\");\n  const [signupUserName, setSignupUserName] = useState(\"\");\n  const [signupEmail, setSignupEmail] = useState(\"\");\n  const handleSignup = async () => {\n    if (signupUserId && signupPassword && signupUserName && signupEmail) {\n      try {\n        const data = {\n          userId: signupUserId,\n          password: signupPassword,\n          userName: signupUserName,\n          userEmail: signupEmail\n        };\n        const response = await axios.post(\"http://localhost:8080/user/signup\", data, {\n          withCredentials: true\n        });\n        if (response.status === 201) {\n          alert(\"회원가입이 완료되었습니다.\");\n          onSuccess();\n        }\n      } catch (error) {\n        console.log(\"회원가입 에러 발생: \", error);\n      }\n    } else {\n      alert(\"가입정보를 모두 입력하여 주세요!!!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)\n  // <div className=\"signup-box\">\n  //   <h2>회원가입</h2>\n  //   <div className=\"input-box\">\n  //     <label>User ID</label>\n  //     <input\n  //       type=\"text\"\n  //       value={signupUserId}\n  //       onChange={(e) => setSignupUserId(e.target.value)}\n  //     />\n  //   </div>\n  //   <div className=\"input-box\">\n  //     <label>Password</label>\n  //     <input\n  //       type=\"password\"\n  //       value={signupPassword}\n  //       onChange={(e) => setSignupPassword(e.target.value)}\n  //     />\n  //   </div>\n  //   <div className=\"input-box\">\n  //     <label>User Name</label>\n  //     <input\n  //       type=\"text\"\n  //       value={signupUserName}\n  //       onChange={(e) => setSignupUserName(e.target.value)}\n  //     />\n  //   </div>\n  //   <div className=\"input-box\">\n  //     <label>Email</label>\n  //     <input\n  //       type=\"email\"\n  //       value={signupEmail}\n  //       onChange={(e) => setSignupEmail(e.target.value)}\n  //     />\n  //   </div>\n  //   <div className=\"button-box\">\n  //     <div className=\"registrationBtn\" onClick={handleSignup}>\n  //       회원등록\n  //     </div>\n  //     <div className=\"registrationCloseBtn\" onClick={onSuccess}>\n  //       닫기\n  //     </div>\n  //   </div>\n  // </div>\n  ;\n};\n_s(SignUp, \"sFWXobfD9CFyObCLEYpihMB0Als=\");\n_c2 = SignUp;\nexport default SignUp;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"names":["React","useState","axios","styled","jsxDEV","_jsxDEV","Container","div","_c","SignUp","onSuccess","_s","signupUserId","setSignupUserId","signupPassword","setSignupPassword","signupUserName","setSignupUserName","signupEmail","setSignupEmail","handleSignup","data","userId","password","userName","userEmail","response","post","withCredentials","status","alert","error","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/admin/Documents/Github/spring/lms_app/src/Components/LMS/Login/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  background-color: #0f1015;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst SignUp = ({ onSuccess }) => {\r\n  const [signupUserId, setSignupUserId] = useState(\"\");\r\n  const [signupPassword, setSignupPassword] = useState(\"\");\r\n  const [signupUserName, setSignupUserName] = useState(\"\");\r\n  const [signupEmail, setSignupEmail] = useState(\"\");\r\n\r\n  const handleSignup = async () => {\r\n    if (signupUserId && signupPassword && signupUserName && signupEmail) {\r\n      try {\r\n        const data = {\r\n          userId: signupUserId,\r\n          password: signupPassword,\r\n          userName: signupUserName,\r\n          userEmail: signupEmail,\r\n        };\r\n        const response = await axios.post(\r\n          \"http://localhost:8080/user/signup\",\r\n          data,\r\n          { withCredentials: true }\r\n        );\r\n        if (response.status === 201) {\r\n          alert(\"회원가입이 완료되었습니다.\");\r\n          onSuccess();\r\n        }\r\n      } catch (error) {\r\n        console.log(\"회원가입 에러 발생: \", error);\r\n      }\r\n    } else {\r\n      alert(\"가입정보를 모두 입력하여 주세요!!!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container></Container>\r\n    // <div className=\"signup-box\">\r\n    //   <h2>회원가입</h2>\r\n    //   <div className=\"input-box\">\r\n    //     <label>User ID</label>\r\n    //     <input\r\n    //       type=\"text\"\r\n    //       value={signupUserId}\r\n    //       onChange={(e) => setSignupUserId(e.target.value)}\r\n    //     />\r\n    //   </div>\r\n    //   <div className=\"input-box\">\r\n    //     <label>Password</label>\r\n    //     <input\r\n    //       type=\"password\"\r\n    //       value={signupPassword}\r\n    //       onChange={(e) => setSignupPassword(e.target.value)}\r\n    //     />\r\n    //   </div>\r\n    //   <div className=\"input-box\">\r\n    //     <label>User Name</label>\r\n    //     <input\r\n    //       type=\"text\"\r\n    //       value={signupUserName}\r\n    //       onChange={(e) => setSignupUserName(e.target.value)}\r\n    //     />\r\n    //   </div>\r\n    //   <div className=\"input-box\">\r\n    //     <label>Email</label>\r\n    //     <input\r\n    //       type=\"email\"\r\n    //       value={signupEmail}\r\n    //       onChange={(e) => setSignupEmail(e.target.value)}\r\n    //     />\r\n    //   </div>\r\n    //   <div className=\"button-box\">\r\n    //     <div className=\"registrationBtn\" onClick={handleSignup}>\r\n    //       회원등록\r\n    //     </div>\r\n    //     <div className=\"registrationCloseBtn\" onClick={onSuccess}>\r\n    //       닫기\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAG;AAC5B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,SAAS;AAKf,MAAMG,MAAM,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIR,YAAY,IAAIE,cAAc,IAAIE,cAAc,IAAIE,WAAW,EAAE;MACnE,IAAI;QACF,MAAMG,IAAI,GAAG;UACXC,MAAM,EAAEV,YAAY;UACpBW,QAAQ,EAAET,cAAc;UACxBU,QAAQ,EAAER,cAAc;UACxBS,SAAS,EAAEP;QACb,CAAC;QACD,MAAMQ,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAC/B,mCAAmC,EACnCN,IAAI,EACJ;UAAEO,eAAe,EAAE;QAAK,CAC1B,CAAC;QACD,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UAC3BC,KAAK,CAAC,gBAAgB,CAAC;UACvBpB,SAAS,CAAC,CAAC;QACb;MACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,KAAK,CAAC;MACpC;IACF,CAAC,MAAM;MACLD,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEzB,OAAA,CAACC,SAAS;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY;EACtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAC1B,EAAA,CA9EIF,MAAM;AAAA6B,GAAA,GAAN7B,MAAM;AAgFZ,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}