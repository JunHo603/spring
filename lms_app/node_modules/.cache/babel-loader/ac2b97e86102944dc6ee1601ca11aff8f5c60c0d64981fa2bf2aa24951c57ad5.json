{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Github\\\\spring\\\\lms_app\\\\src\\\\Components\\\\Unity\\\\UnityProject.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { Notices } from \"../LMS/Community/Notices.js\";\nimport { QA } from \"../LMS/Community/QA.js\";\nimport { Events } from \"../LMS/Community/Events.js\";\nimport { LectureList } from \"../LMS/Lecture/LectureList.js\";\nimport { UserManagement } from \"../LMS/Admin/UserManagement.js\";\nimport axios from \"axios\";\nimport { Cart } from \"../LMS/Cart/Cart.js\";\n\n// 게임을 로드할 화면을 만듬\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Test = styled.div`\n  /* background-image: url(\"https://aipict.com/wp-content/uploads/2023/08/classroom04.png\");\n  width: 100%; */\n`;\n_c = Test;\nconst TestImg = styled.div`\n  width: 1344px;\n  height: 756px;\n`;\nconst Container = styled.div`\n  width: 1344px;\n  height: 756px;\n  margin: auto;\n  border: 1px solid gray;\n`;\n_c2 = Container;\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"1400px\",\n    // 모달의 너비를 설정합니다. (기존 width)\n    height: \"865px\",\n    // 모달의 높이를 설정합니다. (기존 height)\n    padding: \"20px\",\n    borderRadius: \"10px\"\n  },\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\" // 오버레이의 배경색을 설정합니다.\n  }\n};\nexport function UnityProject() {\n  _s();\n  const [playingGame, setPlayingGame] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [userName, setUserName] = useState();\n  const [score, setScore] = useState();\n  const [modalOpen, setModalOpen] = useState(false);\n  const modalBackground = useRef();\n  const [modalReturn, setModalReturn] = useState(null);\n\n  // React 에서 Unity 로 sendMessage 를 통해 전달하기\n  const {\n    unityProvider,\n    sendMessage,\n    addEventListener,\n    removeEventListener\n  } = useUnityContext({\n    loaderUrl: \"build/Build.loader.js\",\n    dataUrl: \"build/Build.data\",\n    frameworkUrl: \"build/Build.framework.js\",\n    codeUrl: \"build/Build.wasm\"\n  });\n\n  // Unity 에서 React 로 전달\n  function handleGameOver(userName, score) {\n    setIsGameOver(true);\n    setUserName(userName);\n    setScore(score);\n  }\n\n  // // Unity에서 호출될 JavaScript 함수\n  // function handleOpenReactWindow(romeName) {\n  //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n  //     // React 애플리케이션의 URL로 새로운 탭을 열기\n  //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\n  // }\n\n  useEffect(() => {\n    addEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n    return () => {\n      removeEventListener(\"OpenReactWindow\", handleOpenReactWindow);\n    };\n  }, []);\n\n  // Unity에서 호출될 JavaScript 함수\n  function handleOpenReactWindow(romeName) {\n    // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n    // React 애플리케이션의 URL로 새로운 탭을 열기\n\n    if (romeName == \"공지사항\") {\n      // window.alert(\"Modal Open 공지사항!!! 전달됨\");\n      setModalOpen(true);\n      setModalReturn(() => Notices); // React component function\n      // setModalReturn(() => UserManagement); // React component function\n      // setModalReturn(() => LectureList); // React component function\n    } else if (romeName == \"이벤트\") {\n      setModalOpen(true);\n      setModalReturn(() => Cart); // React component function\n    } else if (romeName == \"QA\") {\n      setModalOpen(true);\n      setModalReturn(() => QA); // React component function\n    }\n  }\n  useEffect(() => {\n    addEventListener(\"GameOver\", handleGameOver);\n    return () => {\n      removeEventListener(\"GameOver\", handleGameOver);\n    };\n  }, []);\n  function ReactToUnityJSON() {\n    // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\n    const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\n\n    window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\n    axios.get(urlLectureContentQA, {\n      withCredentials: true\n    }).then(response => {\n      console.log(\"데이터:\", response.data);\n      window.alert(\"response.data: \" + response.data[0].question + \"@\" + response.data[1].question + \"@\" + response.data[2].question);\n      const jsonData = JSON.stringify(response.data);\n      window.alert(\"React jsonData: \" + jsonData);\n\n      // Unity로 데이터 전송\n      // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\n      // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\n\n      window.alert(\"SendMessage Start!!!\");\n      sendMessage(\"Player\", \"ReceiveJsonData\", jsonData);\n    }).catch(error => {\n      console.log(\"에러 발생: \", error);\n    });\n  }\n  function RequestFocus() {\n    // Focus 문제로 버그가 있어서, 이 부분을 제외할 경우 상단키를 입력하지 않으면, 플레이어 컨트롤이 안됨.\n    window.alert(\"계속 게임을 진행합니다.\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Test, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./back.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"UnityProject Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPlayingGame(true),\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendMessage(\"PortalManager\", \"PauseGame\"),\n        children: \"Pause Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendMessage(\"PortalManager\", \"ContinueGame\"),\n        children: \"Continue Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendMessage(\"Player\", \"Attack\"),\n        children: \"Attack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => ReactToUnityJSON(),\n        children: \"ReactToUnityJSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-container\",\n          ref: modalBackground,\n          onClick: e => {\n            /* 모달 밖의 부분 클릭시 Close */\n            if (e.target === modalBackground.current) {\n              setModalOpen(false);\n              sendMessage(\"PortalManager\", \"ContinueGame\");\n              RequestFocus();\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modalOpen,\n            onRequestClose: () => {\n              setModalOpen(false);\n            },\n            style: customStyles // 스타일을 적용합니다.\n            ,\n            contentLabel: \"Modal Test\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\"\n              /* 오른쪽 상단 x 클릭시 Close */,\n              onClick: () => {\n                setModalOpen(false);\n                sendMessage(\"PortalManager\", \"ContinueGame\");\n                RequestFocus();\n              },\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\uB9AC\\uC561\\uD2B8\\uB85C \\uBAA8\\uB2EC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), modalReturn && /*#__PURE__*/React.createElement(modalReturn), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              /* [모달 닫기] 버튼 클릭시 Close */\n              onClick: () => {\n                setModalOpen(false);\n                sendMessage(\"PortalManager\", \"ContinueGame\");\n                RequestFocus();\n              },\n              children: \"\\uBAA8\\uB2EC \\uB2EB\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), playingGame ? /*#__PURE__*/_jsxDEV(Unity, {\n          unityProvider: unityProvider,\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), isGameOver === true && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Game Over ${userName}! You've scored ${score} points.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(UnityProject, \"EZUG1KFzUpuW/JQVkyR/2oFbV7U=\", false, function () {\n  return [useUnityContext];\n});\n_c3 = UnityProject;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Test\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"UnityProject\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Unity","useUnityContext","styled","Modal","Notices","QA","Events","LectureList","UserManagement","axios","Cart","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","div","_c","TestImg","Container","_c2","customStyles","content","top","left","right","bottom","transform","width","height","padding","borderRadius","overlay","backgroundColor","UnityProject","_s","playingGame","setPlayingGame","isGameOver","setIsGameOver","userName","setUserName","score","setScore","modalOpen","setModalOpen","modalBackground","modalReturn","setModalReturn","unityProvider","sendMessage","addEventListener","removeEventListener","loaderUrl","dataUrl","frameworkUrl","codeUrl","handleGameOver","handleOpenReactWindow","romeName","ReactToUnityJSON","urlLectureContentQA","window","alert","get","withCredentials","then","response","console","log","data","question","jsonData","JSON","stringify","catch","error","RequestFocus","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","ref","e","target","current","isOpen","onRequestClose","style","contentLabel","createElement","_c3","$RefreshReg$"],"sources":["C:/Users/admin/Documents/Github/spring/lms_app/src/Components/Unity/UnityProject.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Modal from \"react-modal\";\r\n\r\nimport { Notices } from \"../LMS/Community/Notices.js\";\r\nimport { QA } from \"../LMS/Community/QA.js\";\r\nimport { Events } from \"../LMS/Community/Events.js\";\r\n\r\nimport { LectureList } from \"../LMS/Lecture/LectureList.js\";\r\n\r\nimport { UserManagement } from \"../LMS/Admin/UserManagement.js\";\r\n\r\nimport axios from \"axios\";\r\nimport { Cart } from \"../LMS/Cart/Cart.js\";\r\n\r\n// 게임을 로드할 화면을 만듬\r\n\r\nconst Test = styled.div`\r\n  /* background-image: url(\"https://aipict.com/wp-content/uploads/2023/08/classroom04.png\");\r\n  width: 100%; */\r\n`;\r\n\r\nconst TestImg = styled.div`\r\n  width: 1344px;\r\n  height: 756px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 1344px;\r\n  height: 756px;\r\n  margin: auto;\r\n  border: 1px solid gray;\r\n`;\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"1400px\", // 모달의 너비를 설정합니다. (기존 width)\r\n    height: \"865px\", // 모달의 높이를 설정합니다. (기존 height)\r\n    padding: \"20px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\", // 오버레이의 배경색을 설정합니다.\r\n  },\r\n};\r\n\r\nexport function UnityProject() {\r\n  const [playingGame, setPlayingGame] = useState(false);\r\n\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [userName, setUserName] = useState();\r\n  const [score, setScore] = useState();\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const modalBackground = useRef();\r\n\r\n  const [modalReturn, setModalReturn] = useState(null);\r\n\r\n  // React 에서 Unity 로 sendMessage 를 통해 전달하기\r\n  const { unityProvider, sendMessage, addEventListener, removeEventListener } =\r\n    useUnityContext({\r\n      loaderUrl: \"build/Build.loader.js\",\r\n      dataUrl: \"build/Build.data\",\r\n      frameworkUrl: \"build/Build.framework.js\",\r\n      codeUrl: \"build/Build.wasm\",\r\n    });\r\n\r\n  // Unity 에서 React 로 전달\r\n  function handleGameOver(userName, score) {\r\n    setIsGameOver(true);\r\n    setUserName(userName);\r\n    setScore(score);\r\n  }\r\n\r\n  // // Unity에서 호출될 JavaScript 함수\r\n  // function handleOpenReactWindow(romeName) {\r\n  //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\r\n  //     // React 애플리케이션의 URL로 새로운 탭을 열기\r\n  //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\r\n  // }\r\n\r\n  useEffect(() => {\r\n    addEventListener(\"OpenReactWindow\", handleOpenReactWindow);\r\n    return () => {\r\n      removeEventListener(\"OpenReactWindow\", handleOpenReactWindow);\r\n    };\r\n  }, []);\r\n\r\n  // Unity에서 호출될 JavaScript 함수\r\n  function handleOpenReactWindow(romeName) {\r\n    // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\r\n    // React 애플리케이션의 URL로 새로운 탭을 열기\r\n\r\n    if (romeName == \"공지사항\") {\r\n      // window.alert(\"Modal Open 공지사항!!! 전달됨\");\r\n      setModalOpen(true);\r\n      setModalReturn(() => Notices); // React component function\r\n      // setModalReturn(() => UserManagement); // React component function\r\n      // setModalReturn(() => LectureList); // React component function\r\n    } else if (romeName == \"이벤트\") {\r\n      setModalOpen(true);\r\n      setModalReturn(() => Cart); // React component function\r\n    } else if (romeName == \"QA\") {\r\n      setModalOpen(true);\r\n      setModalReturn(() => QA); // React component function\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    addEventListener(\"GameOver\", handleGameOver);\r\n    return () => {\r\n      removeEventListener(\"GameOver\", handleGameOver);\r\n    };\r\n  }, []);\r\n\r\n  function ReactToUnityJSON() {\r\n    // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\r\n    const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\r\n\r\n    window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\r\n\r\n    axios\r\n      .get(urlLectureContentQA, {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        console.log(\"데이터:\", response.data);\r\n        window.alert(\r\n          \"response.data: \" +\r\n            response.data[0].question +\r\n            \"@\" +\r\n            response.data[1].question +\r\n            \"@\" +\r\n            response.data[2].question\r\n        );\r\n\r\n        const jsonData = JSON.stringify(response.data);\r\n\r\n        window.alert(\"React jsonData: \" + jsonData);\r\n\r\n        // Unity로 데이터 전송\r\n        // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\r\n        // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\r\n\r\n        window.alert(\"SendMessage Start!!!\");\r\n\r\n        sendMessage(\"Player\", \"ReceiveJsonData\", jsonData);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"에러 발생: \", error);\r\n      });\r\n  }\r\n\r\n  function RequestFocus() {\r\n    // Focus 문제로 버그가 있어서, 이 부분을 제외할 경우 상단키를 입력하지 않으면, 플레이어 컨트롤이 안됨.\r\n    window.alert(\"계속 게임을 진행합니다.\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Test>\r\n        <img src=\"./back.png\"></img> <h1>UnityProject Game</h1>\r\n        <button onClick={() => setPlayingGame(true)}>Start Game</button>\r\n        <button onClick={() => sendMessage(\"PortalManager\", \"PauseGame\")}>\r\n          Pause Game\r\n        </button>\r\n        <button onClick={() => sendMessage(\"PortalManager\", \"ContinueGame\")}>\r\n          Continue Game\r\n        </button>\r\n        <button onClick={() => sendMessage(\"Player\", \"Attack\")}>Attack</button>\r\n        <button onClick={() => ReactToUnityJSON()}>ReactToUnityJSON</button>\r\n        <Container>\r\n          {/* <div className={\"btn-wrapper\"}>\r\n                    <button\r\n                        className={\"modal-open-btn\"}\r\n                        onClick={() => setModalOpen(true)}\r\n                    >\r\n                        모달 열기\r\n                    </button>\r\n                </div> */}\r\n          {modalOpen && (\r\n            <div\r\n              className={\"modal-container\"}\r\n              ref={modalBackground}\r\n              onClick={(e) => {\r\n                /* 모달 밖의 부분 클릭시 Close */\r\n                if (e.target === modalBackground.current) {\r\n                  setModalOpen(false);\r\n                  sendMessage(\"PortalManager\", \"ContinueGame\");\r\n                  RequestFocus();\r\n                }\r\n              }}\r\n            >\r\n              {/* <div className={\"modal-content\"}> */}\r\n              <Modal\r\n                isOpen={modalOpen}\r\n                onRequestClose={() => {\r\n                  setModalOpen(false);\r\n                }}\r\n                style={customStyles} // 스타일을 적용합니다.\r\n                contentLabel=\"Modal Test\"\r\n              >\r\n                <span\r\n                  className=\"close\"\r\n                  /* 오른쪽 상단 x 클릭시 Close */\r\n                  onClick={() => {\r\n                    setModalOpen(false);\r\n                    sendMessage(\"PortalManager\", \"ContinueGame\");\r\n                    RequestFocus();\r\n                  }}\r\n                >\r\n                  &times;\r\n                </span>\r\n                <h1>리액트로 모달</h1>\r\n                {modalReturn && React.createElement(modalReturn)}\r\n                <br></br>\r\n                <button\r\n                  /* [모달 닫기] 버튼 클릭시 Close */\r\n                  onClick={() => {\r\n                    setModalOpen(false);\r\n                    sendMessage(\"PortalManager\", \"ContinueGame\");\r\n                    RequestFocus();\r\n                  }}\r\n                >\r\n                  모달 닫기\r\n                </button>\r\n              </Modal>\r\n              {/* </div> */}\r\n            </div>\r\n          )}\r\n          {playingGame ? (\r\n            <Unity\r\n              unityProvider={unityProvider}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n              }}\r\n            />\r\n          ) : null}\r\n        </Container>\r\n        {/* // Unity 에서 게임오버 메시지를 받으면 출력후 종료 */}\r\n        {isGameOver === true && (\r\n          <p>{`Game Over ${userName}! You've scored ${score} points.`}</p>\r\n        )}\r\n      </Test>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}