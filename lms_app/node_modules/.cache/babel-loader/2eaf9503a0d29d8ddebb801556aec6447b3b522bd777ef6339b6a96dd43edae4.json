{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n  withCredentials: true\n});\nexport async function signUp(userDto) {\n  try {\n    const response = await api.post(\"/signup\", userDto);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error signUp:\", error);\n    throw error;\n  }\n}\nexport async function login(userDto) {\n  try {\n    const response = await api.post(\"/user/login\", userDto);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error login:\", error);\n    throw error;\n  }\n}\nexport async function logout() {\n  try {\n    const response = await api.post(\"/user/logout\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error logout:\", error);\n    throw error;\n  }\n}\n\n// export async function getCurrentUser() {\n//   try {\n//     const response = await api.get(\"/user/current\");\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error getCurrentUser:\", error);\n//     throw error;\n//   }\n// }\n\nexport const sessionCurrent = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:8080/user/current\", {\n      withCredentials: true\n    });\n    console.log(\"세션 데이터: \", response.data);\n    if (response.status === 200) {\n      return {\n        success: true,\n        data: response.data\n      };\n    } else {\n      return {\n        success: false,\n        data: null\n      };\n    }\n  } catch (error) {\n    console.error(\"세션 확인 에러 발생: \", error);\n    return {\n      success: false,\n      data: null,\n      error: error\n    };\n  }\n};\nexport async function getUserByUserId(userId) {\n  try {\n    const response = await api.get(`/user/id/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error getUserByUserId:\", error);\n    throw error;\n  }\n}\nexport async function findUsersByUserNameLike(userName) {\n  try {\n    const response = await api.get(`/user/id/nameLike/${userName}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error findUsersByUserNameLike:\", error);\n    throw error;\n  }\n}\nexport async function getUserByUserName(userName) {\n  try {\n    const response = await api.get(`/user/id/name/${userName}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error getUserByUserName:\", error);\n    throw error;\n  }\n}\nexport async function getAllUsers() {\n  try {\n    const response = await api.get(\"/user/admin/getAllUsers\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error getAllUsers:\", error);\n    throw error;\n  }\n}\nexport async function setUserData(user) {\n  try {\n    const response = await api.put(\"/user/userset\", user);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error setUserData:\", error);\n    throw error;\n  }\n}\nexport async function updateAuthority(authorityUpdateDto) {\n  try {\n    const response = await api.put(\"/user/updateAuthority\", authorityUpdateDto);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updateAuthority:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","signUp","userDto","response","post","data","error","console","login","logout","sessionCurrent","get","log","status","success","getUserByUserId","userId","findUsersByUserNameLike","userName","getUserByUserName","getAllUsers","setUserData","user","put","updateAuthority","authorityUpdateDto"],"sources":["C:/Users/admin/Documents/Github/lms_app/src/Api/UserApi/UserApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:8080\",\r\n  withCredentials: true,\r\n});\r\n\r\nexport async function signUp(userDto) {\r\n  try {\r\n    const response = await api.post(\"/signup\", userDto);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error signUp:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function login(userDto) {\r\n  try {\r\n    const response = await api.post(\"/user/login\", userDto);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error login:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function logout() {\r\n  try {\r\n    const response = await api.post(\"/user/logout\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error logout:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// export async function getCurrentUser() {\r\n//   try {\r\n//     const response = await api.get(\"/user/current\");\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error getCurrentUser:\", error);\r\n//     throw error;\r\n//   }\r\n// }\r\n\r\nexport const sessionCurrent = async () => {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:8080/user/current\", {\r\n      withCredentials: true,\r\n    });\r\n    console.log(\"세션 데이터: \", response.data);\r\n    if (response.status === 200) {\r\n      return { success: true, data: response.data };\r\n    } else {\r\n      return { success: false, data: null };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"세션 확인 에러 발생: \", error);\r\n    return { success: false, data: null, error: error };\r\n  }\r\n};\r\n\r\nexport async function getUserByUserId(userId) {\r\n  try {\r\n    const response = await api.get(`/user/id/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error getUserByUserId:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function findUsersByUserNameLike(userName) {\r\n  try {\r\n    const response = await api.get(`/user/id/nameLike/${userName}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error findUsersByUserNameLike:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getUserByUserName(userName) {\r\n  try {\r\n    const response = await api.get(`/user/id/name/${userName}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error getUserByUserName:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getAllUsers() {\r\n  try {\r\n    const response = await api.get(\"/user/admin/getAllUsers\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error getAllUsers:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function setUserData(user) {\r\n  try {\r\n    const response = await api.put(\"/user/userset\", user);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error setUserData:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function updateAuthority(authorityUpdateDto) {\r\n  try {\r\n    const response = await api.put(\"/user/updateAuthority\", authorityUpdateDto);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updateAuthority:\", error);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}