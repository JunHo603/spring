{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Github\\\\spring\\\\lms_app\\\\src\\\\Components\\\\Unity\\\\UnityProject.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { ModalNotices } from \"../LMS/Community/ModalNotices.js\";\nimport { Lecture } from \"../LMS/Lecture/Lecture.js\";\nimport { LectureList } from \"../LMS/Lecture/LectureList.js\";\nimport { UserManagement } from \"../LMS/Admin/UserManagement.js\";\nimport axios from \"axios\";\n\n// 게임을 로드할 화면을 만듬\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 1344px;\n  height: 756px;\n  margin: auto;\n  border: 1px solid gray;\n`;\n_c = Container;\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"1200px\",\n    // 모달의 너비를 설정합니다.\n    height: \"800px\",\n    // 모달의 높이를 설정합니다.\n    padding: \"20px\",\n    borderRadius: \"10px\"\n  },\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\" // 오버레이의 배경색을 설정합니다.\n  }\n};\nexport function UnityProject() {\n  _s();\n  const [playingGame, setPlayingGame] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [userName, setUserName] = useState();\n  const [score, setScore] = useState();\n  const [modalOpen, setModalOpen] = useState(false);\n  const modalBackground = useRef();\n  const [modalReturn, setModalReturn] = useState(null);\n  const [massage, setMassage] = useState(\"\");\n\n  // React 에서 Unity 로 sendMessage 를 통해 전달하기\n  const {\n    unityProvider,\n    sendMessage,\n    addEventListener,\n    removeEventListener\n  } = useUnityContext({\n    loaderUrl: \"build/Build.loader.js\",\n    dataUrl: \"build/Build.data\",\n    frameworkUrl: \"build/Build.framework.js\",\n    codeUrl: \"build/Build.wasm\"\n  });\n\n  // Unity 에서 React 로 전달\n  function handleGameOver(userName, score) {\n    setIsGameOver(true);\n    setUserName(userName);\n    setScore(score);\n  }\n\n  // // Unity에서 호출될 JavaScript 함수\n  // function handleOpenReactWindowNotices(romeName) {\n  //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n  //     // React 애플리케이션의 URL로 새로운 탭을 열기\n  //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\n  // }\n\n  useEffect(() => {\n    handleOpenReactWindowNotices();\n  }, []);\n\n  // Unity에서 호출될 JavaScript 함수\n  function handleOpenReactWindowNotices(romeName) {\n    // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\n    // React 애플리케이션의 URL로 새로운 탭을 열기\n\n    if (romeName == \"공지사항\") {\n      window.alert(\"Modal Open 공지사항!!! 전달됨\");\n      setMassage(\"PauseGame\");\n      sendMessage(\"Player\", massage);\n      console.log(\"test\" + massage);\n      setModalOpen(true);\n      // setModalReturn(() => ModalNotices); // React component function\n      // setModalReturn(() => UserManagement); // React component function\n      setModalReturn(() => LectureList); // React component function\n    }\n  }\n  useEffect(() => {\n    addEventListener(\"OpenReactWindowNotices\", handleOpenReactWindowNotices);\n    return () => {\n      removeEventListener(\"OpenReactWindowNotices\", handleOpenReactWindowNotices);\n    };\n  }, [addEventListener, removeEventListener]);\n  useEffect(() => {\n    addEventListener(\"GameOver\", handleGameOver);\n    return () => {\n      removeEventListener(\"GameOver\", handleGameOver);\n    };\n  }, []);\n  function ReactToUnityJSON() {\n    // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\n    const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\n\n    window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\n    axios.get(urlLectureContentQA, {\n      withCredentials: true\n    }).then(response => {\n      console.log(\"데이터:\", response.data);\n      window.alert(\"response.data: \" + response.data[0].question + \"@\" + response.data[1].question + \"@\" + response.data[2].question);\n      const jsonData = JSON.stringify(response.data);\n      window.alert(\"React jsonData: \" + jsonData);\n\n      // Unity로 데이터 전송\n      // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\n      // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\n\n      window.alert(\"SendMessage Start!!!\");\n      sendMessage(\"Player\", \"ReceiveJsonData\", jsonData);\n    }).catch(error => {\n      console.log(\"에러 발생: \", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"UnityProject Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPlayingGame(true),\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage(\"Player\", \"PauseGame\"),\n      children: \"Pause Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage(\"Player\", \"ContinueGame\"),\n      children: \"Continue Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage(\"Player\", \"Attack\"),\n      children: \"Attack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => ReactToUnityJSON(),\n      children: \"ReactToUnityJSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        ref: modalBackground,\n        onClick: e => {\n          if (e.target === modalBackground.current) {\n            setModalOpen(false);\n            sendMessage(\"Player\", \"ContinueGame\");\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modalOpen,\n          onRequestClose: () => setModalOpen(false),\n          style: customStyles // 스타일을 적용합니다.\n          ,\n          contentLabel: \"Modal Test\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: () => {\n              setModalOpen(false);\n              sendMessage(\"Player\", \"ContinueGame\");\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uB9AC\\uC561\\uD2B8\\uB85C \\uBAA8\\uB2EC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), modalReturn && /*#__PURE__*/React.createElement(modalReturn), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setModalOpen(false);\n              sendMessage(\"Player\", \"ContinueGame\");\n            },\n            children: \"\\uBAA8\\uB2EC \\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), playingGame ? /*#__PURE__*/_jsxDEV(Unity, {\n        unityProvider: unityProvider,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), isGameOver === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Game Over ${userName}! You've scored ${score} points.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(UnityProject, \"mgW0c+d7tVZscbXiEMZAXvfN+Q8=\", false, function () {\n  return [useUnityContext];\n});\n_c2 = UnityProject;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"UnityProject\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Unity","useUnityContext","styled","Modal","ModalNotices","Lecture","LectureList","UserManagement","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","customStyles","content","top","left","right","bottom","transform","width","height","padding","borderRadius","overlay","backgroundColor","UnityProject","_s","playingGame","setPlayingGame","isGameOver","setIsGameOver","userName","setUserName","score","setScore","modalOpen","setModalOpen","modalBackground","modalReturn","setModalReturn","massage","setMassage","unityProvider","sendMessage","addEventListener","removeEventListener","loaderUrl","dataUrl","frameworkUrl","codeUrl","handleGameOver","handleOpenReactWindowNotices","romeName","window","alert","console","log","ReactToUnityJSON","urlLectureContentQA","get","withCredentials","then","response","data","question","jsonData","JSON","stringify","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","ref","e","target","current","isOpen","onRequestClose","style","contentLabel","createElement","_c2","$RefreshReg$"],"sources":["C:/Users/admin/Documents/Github/spring/lms_app/src/Components/Unity/UnityProject.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Modal from \"react-modal\";\r\nimport { ModalNotices } from \"../LMS/Community/ModalNotices.js\";\r\n\r\nimport { Lecture } from \"../LMS/Lecture/Lecture.js\";\r\nimport { LectureList } from \"../LMS/Lecture/LectureList.js\";\r\n\r\nimport { UserManagement } from \"../LMS/Admin/UserManagement.js\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// 게임을 로드할 화면을 만듬\r\nconst Container = styled.div`\r\n  width: 1344px;\r\n  height: 756px;\r\n  margin: auto;\r\n  border: 1px solid gray;\r\n`;\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"1200px\", // 모달의 너비를 설정합니다.\r\n    height: \"800px\", // 모달의 높이를 설정합니다.\r\n    padding: \"20px\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\", // 오버레이의 배경색을 설정합니다.\r\n  },\r\n};\r\n\r\nexport function UnityProject() {\r\n  const [playingGame, setPlayingGame] = useState(false);\r\n\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [userName, setUserName] = useState();\r\n  const [score, setScore] = useState();\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const modalBackground = useRef();\r\n\r\n  const [modalReturn, setModalReturn] = useState(null);\r\n  const [massage, setMassage] = useState(\"\");\r\n\r\n  // React 에서 Unity 로 sendMessage 를 통해 전달하기\r\n  const { unityProvider, sendMessage, addEventListener, removeEventListener } =\r\n    useUnityContext({\r\n      loaderUrl: \"build/Build.loader.js\",\r\n      dataUrl: \"build/Build.data\",\r\n      frameworkUrl: \"build/Build.framework.js\",\r\n      codeUrl: \"build/Build.wasm\",\r\n    });\r\n\r\n  // Unity 에서 React 로 전달\r\n  function handleGameOver(userName, score) {\r\n    setIsGameOver(true);\r\n    setUserName(userName);\r\n    setScore(score);\r\n  }\r\n\r\n  // // Unity에서 호출될 JavaScript 함수\r\n  // function handleOpenReactWindowNotices(romeName) {\r\n  //     // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\r\n  //     // React 애플리케이션의 URL로 새로운 탭을 열기\r\n  //     window.open(\"http://localhost:3000/community/notices\", \"_blank\");\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleOpenReactWindowNotices();\r\n  }, []);\r\n\r\n  // Unity에서 호출될 JavaScript 함수\r\n  function handleOpenReactWindowNotices(romeName) {\r\n    // 예를 들어, 새로운 브라우저 창을 열도록 구현할 수 있습니다.\r\n    // React 애플리케이션의 URL로 새로운 탭을 열기\r\n\r\n    if (romeName == \"공지사항\") {\r\n      window.alert(\"Modal Open 공지사항!!! 전달됨\");\r\n      setMassage(\"PauseGame\");\r\n      sendMessage(\"Player\", massage);\r\n      console.log(\"test\" + massage);\r\n      setModalOpen(true);\r\n      // setModalReturn(() => ModalNotices); // React component function\r\n      // setModalReturn(() => UserManagement); // React component function\r\n      setModalReturn(() => LectureList); // React component function\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    addEventListener(\"OpenReactWindowNotices\", handleOpenReactWindowNotices);\r\n    return () => {\r\n      removeEventListener(\r\n        \"OpenReactWindowNotices\",\r\n        handleOpenReactWindowNotices\r\n      );\r\n    };\r\n  }, [addEventListener, removeEventListener]);\r\n\r\n  useEffect(() => {\r\n    addEventListener(\"GameOver\", handleGameOver);\r\n    return () => {\r\n      removeEventListener(\"GameOver\", handleGameOver);\r\n    };\r\n  }, []);\r\n\r\n  function ReactToUnityJSON() {\r\n    // const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/${lectureId}/${data.learningContentsSeq}`; // /{lectureId}/{learningContentsSeq}\r\n    const urlLectureContentQA = `http://localhost:8080/learning/contents/qa/L00000000052/3`; // /{lectureId}/{learningContentsSeq}\r\n\r\n    window.alert(\"urlLectureContentQA: \" + urlLectureContentQA);\r\n\r\n    axios\r\n      .get(urlLectureContentQA, {\r\n        withCredentials: true,\r\n      })\r\n      .then((response) => {\r\n        console.log(\"데이터:\", response.data);\r\n        window.alert(\r\n          \"response.data: \" +\r\n            response.data[0].question +\r\n            \"@\" +\r\n            response.data[1].question +\r\n            \"@\" +\r\n            response.data[2].question\r\n        );\r\n\r\n        const jsonData = JSON.stringify(response.data);\r\n\r\n        window.alert(\"React jsonData: \" + jsonData);\r\n\r\n        // Unity로 데이터 전송\r\n        // sendMessage(\"DataReceiverObject\", \"ReceiveJsonData\", jsonData);\r\n        // sendMessage(\"DataReceiver\", \"ReceiveJsonData\", jsonData);\r\n\r\n        window.alert(\"SendMessage Start!!!\");\r\n\r\n        sendMessage(\"Player\", \"ReceiveJsonData\", jsonData);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"에러 발생: \", error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>UnityProject Game</h1>\r\n      <button onClick={() => setPlayingGame(true)}>Start Game</button>\r\n      <button onClick={() => sendMessage(\"Player\", \"PauseGame\")}>\r\n        Pause Game\r\n      </button>\r\n      <button onClick={() => sendMessage(\"Player\", \"ContinueGame\")}>\r\n        Continue Game\r\n      </button>\r\n      <button onClick={() => sendMessage(\"Player\", \"Attack\")}>Attack</button>\r\n      <button onClick={() => ReactToUnityJSON()}>ReactToUnityJSON</button>\r\n      <Container>\r\n        {/* <div className={\"btn-wrapper\"}>\r\n                    <button\r\n                        className={\"modal-open-btn\"}\r\n                        onClick={() => setModalOpen(true)}\r\n                    >\r\n                        모달 열기\r\n                    </button>\r\n                </div> */}\r\n        {modalOpen && (\r\n          <div\r\n            className={\"modal-container\"}\r\n            ref={modalBackground}\r\n            onClick={(e) => {\r\n              if (e.target === modalBackground.current) {\r\n                setModalOpen(false);\r\n                sendMessage(\"Player\", \"ContinueGame\");\r\n              }\r\n            }}\r\n          >\r\n            {/* <div className={\"modal-content\"}> */}\r\n            <Modal\r\n              isOpen={modalOpen}\r\n              onRequestClose={() => setModalOpen(false)}\r\n              style={customStyles} // 스타일을 적용합니다.\r\n              contentLabel=\"Modal Test\"\r\n            >\r\n              <span\r\n                className=\"close\"\r\n                onClick={() => {\r\n                  setModalOpen(false);\r\n                  sendMessage(\"Player\", \"ContinueGame\");\r\n                }}\r\n              >\r\n                &times;\r\n              </span>\r\n              <h1>리액트로 모달</h1>\r\n              {modalReturn && React.createElement(modalReturn)}\r\n              <br></br>\r\n              <button\r\n                onClick={() => {\r\n                  setModalOpen(false);\r\n                  sendMessage(\"Player\", \"ContinueGame\");\r\n                }}\r\n              >\r\n                모달 닫기\r\n              </button>\r\n            </Modal>\r\n            {/* </div> */}\r\n          </div>\r\n        )}\r\n        {playingGame ? (\r\n          <Unity\r\n            unityProvider={unityProvider}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }}\r\n          />\r\n        ) : null}\r\n      </Container>\r\n\r\n      {/* // Unity 에서 게임오버 메시지를 받으면 출력후 종료 */}\r\n      {isGameOver === true && (\r\n        <p>{`Game Over ${userName}! You've scored ${score} points.`}</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}